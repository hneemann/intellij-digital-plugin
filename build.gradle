import org.jetbrains.grammarkit.tasks.*

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.3.9'
    id 'org.jetbrains.grammarkit' version "2018.2"
}

group 'de.patrick246'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

apply plugin: 'org.jetbrains.grammarkit'

allprojects {
    apply plugin: 'java'
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir 'src/main/gen'
            }
        }
    }

    apply plugin: 'org.jetbrains.intellij'
}

runIde {
    jvmArgs '-Dcompiler.process.debug.port=5006'
}

repositories {
    mavenCentral()
}

dependencies {
    compile project('digital-assembler-jps-plugin')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version '2018.2.3'
}
patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}



task generateLexer(type: GenerateLexer) {
    // source flex file
    source = "src/main/resources/de/patrick246/intellij/digitalplugin/DigitalAssembler.flex"

    // target directory for lexer
    targetDir = "src/main/gen/de/patrick246/intellij/digitalplugin/language"

    // target classname, target file will be targetDir/targetClass.java
    targetClass = "DALexer"

    // if set, plugin will remove a lexer output file before generating new one. Default: false
    purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
    // source bnf file
    source = "src/main/resources/de/patrick246/intellij/digitalplugin/DigitalAssembler.bnf"

    // optional, task-specific root for the generated files. Default: none
    targetRoot = 'src/main/gen'

    // path to a parser file, relative to the targetRoot
    pathToParser = '/de/patrick246/intellij/digitalplugin/parser/DAParser.java'

    // path to a directory with generated psi files, relative to the targetRoot
    pathToPsiRoot = '/de/patrick246/intellij/digitalplugin/psi'

    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
    purgeOldFiles = true
}

generateLexer.dependsOn generateParser
compileJava.dependsOn generateLexer